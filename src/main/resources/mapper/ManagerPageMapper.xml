<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 민아) 5/19, 관리자페이지  -->
  <!-- 민아) 5/25, 관리자페이지 이것저것 추가중  -->
<mapper namespace="com.example.demo.dao.ManagerPageDao">
	
	
	<!-- 자유게시판, 댓글 목록/삭제 -->
	<!-- 댓글목록 -->
	<select id="listComment" resultType="com.example.demo.vo.Board_CommentVo">
		select * from board_comment where board_no = #{board_no} order by comm_num desc
	</select>
	<!-- 게시물에 있는 사진 삭제 -->
	<delete id="delboard_no">
		delete board_file where board_no = #{board_no}
	</delete>
	<!-- 댓글삭제 -->
	<delete id="deleteComment">
		delete board_comment where comm_num = #{comm_num}
	</delete>
	
	<delete id="deleteCommBoard">
		delete board_comment where board_no = #{board_no}
	</delete>
	
	<!-- 자유게시판, 목록/상세/삭제 -->
	<select id="listBoard" resultType="com.example.demo.vo.BoardVo">
		select * from board order by board_no desc
	</select>
	
	<select id="detailBoard" resultType="com.example.demo.vo.BoardVo">
		select * from board where board_no = #{board_no}
	</select>
	
	<delete id="deleteBoard">
		delete board where board_no = #{board_no}
	</delete>
	
	<!-- 회원 결제정보 //  나중에 예약정보 상세페이지도 연결할것 -->
	<select id="listPay" resultType="com.example.demo.vo.PaymentVo">
		select * from payment
	</select>
	
	<!-- 공지사항 / 목록,글쓰기,상세보기,삭제,수정  -->
	<select id="listNotice" resultType="com.example.demo.vo.NoticeVo">
		select * from notice order by notice_no desc
	</select>
	
	<insert id="insertNotice">
 		insert into notice values (seq_notice_no.nextval, #{notice_title},#{notice_content},0,sysdate,#{cs_no})
 	</insert>
 	 
 	<select id="detailNotice" resultType="com.example.demo.vo.NoticeVo">
		select * from notice where notice_no = #{notice_no}
	</select>
 	
 	<delete id="deleteNotice">
		delete notice where notice_no = #{notice_no}
	</delete>
	
	<update id="updateNotice">
		update notice set notice_title = #{notice_title}, notice_content = #{notice_content},
				 cs_no = #{cs_no} where notice_no = #{notice_no}
	</update>
	
	<!-- 관리자메인 / 일주일/ 신규회원수 -->
	<select id="newMember" resultType="int">
		select count(*) from member_info
			where info_create_date <![CDATA[  <    ]]> sysdate and info_create_date <![CDATA[  >    ]]> sysdate - 6
	</select>
	
	<!-- 관리자메인 / 일주일/ 결제된 금액 -->
	<select id="newPay" resultType="java.lang.Integer">
		select sum(paid_amount) from payment  
			where paid_time <![CDATA[  <    ]]> sysdate and paid_time <![CDATA[  >    ]]> sysdate - 6
	</select>
	
	<!-- 관리자메인 / 일주일/ 등록된 게시물 수(자유게시판 + sns게시판) -->
	<select id="newBoard" resultType="int">
		select count(board_no) from board 
			where board_date <![CDATA[  <    ]]> sysdate and board_date <![CDATA[  >    ]]> sysdate - 6
	</select>
	<select id="newPic" resultType="int">
		select count(photo_no) from pic_board 
			where photo_date <![CDATA[  <    ]]> sysdate and photo_date <![CDATA[  >    ]]> sysdate - 6	
	</select>
	
	<!-- 관리자메인 / 일주일/ 개설된 모임 수 -->
	<select id="newTogether" resultType="int">
		select count(t_num) from together 
			where t_open_date <![CDATA[  <    ]]> sysdate and t_open_date <![CDATA[  >    ]]> sysdate - 6
	</select>
		
	<!-- 로그를 구글 차트로 나타내보기 위한 카운트 상위 10개만뽑는다면? -->                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
	<select id="chartLog" resultType="com.example.demo.vo.ChartVo">
		select cnt as count, url
			from (select count(*) cnt, url from aop_log group by url  having count(*) >1 order by cnt desc)
				where rownum<![CDATA[  <=    ]]>10              
	</select>
		<!-- select count(*) count, url from aop_log group by url -->
		
	<!-- 로그 등록 -->
	<insert id="insertLog">
		insert into aop_log values(seq_log_num.nextval, #{url}, #{ip}, #{time}, #{user_id} )
	</insert>

	<!-- 로그 목록 -->
	<select id="listLog" resultType="com.example.demo.vo.Aop_LogVo">
		select log_num, url, ip, time, user_id from aop_log order by log_num desc
	</select>
	

	<!-- 회원 목록 -->
	<select id="listMember" resultType="com.example.demo.vo.MemberInfoVo">
		select user_id, tel, name, nick_name, info_create_date, info_update_date
			from member_info order by info_create_date desc						
	</select>
	
	<!-- 회원 상세보기 -->
	<select id="getMember" resultType="com.example.demo.vo.MemberInfoVo">
  		select * from member_info where user_id = #{user_id}
  	</select>
  	
  	<!-- 회원 삭제(강퇴) //  -->
	<delete id="deleteMember">
		delete member_info where user_id = #{user_id}
	</delete>
	
<!-- 	QnA 리스트 -->
	<select id="listQnA" resultType="com.example.demo.vo.QnAVo">
		SELECT  *
		 FROM ( 
		 		select inq_no, cs_no, inq_title, inq_content, inq_date, user_id, inq_file, ref, ref_step, ref_level, ROW_NUMBER() OVER(ORDER BY inq_no DESC) AS RNUM
		        FROM qna) q
		order by ref desc, ref_level, ref_step
	</select>
	
<!-- 	QnA 상세보기 -->
	<select id="detailQnA" resultType="com.example.demo.vo.QnAVo">
		select * from qna where inq_no = #{inq_no}
	</select>
	
	<!-- QnA 답변등록 -->
	<insert id="anwerQnA">
		insert into qna values 
			((select nvl(max(inq_no), 0) + 1 from qna), #{cs_no}, #{inq_title}, #{inq_content}, sysdate, #{user_id}, '', #{ref}, #{ref_step}, #{ref_level})
	</insert>
	
<!-- 	QnA 삭제 -->
	<delete id="deleteQnA">
		delete qna where inq_no = #{inq_no}
	</delete>
</mapper>