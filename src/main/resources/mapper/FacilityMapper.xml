<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.FacilityDao">
 	<select id="listFacility" resultType="com.example.demo.vo.FacilityVo" parameterType="com.example.demo.util.SearchCriteria">
 		select facility_no,
 		f_pic,
 		facility_name,
 		f_intro,
 		facility_addr,
 		f_minprice,
 		f_phone,
 		f_feature
 		from
 		(
 		select facility_no,
 		f_pic,
 		facility_name,
 		f_intro,
 		facility_addr,
 		f_minprice,
 		f_phone,
 		f_feature,
 		row_number() over(order by f_minprice) as rNum
 		from facility
 		where 1=1
 		<include refid="search"></include> 		 
 		)MP
		where rNum between #{rowStart} and #{rowEnd}
		order by f_minprice
 	</select>
 	<sql id="search">
	    <if test="keyword != null">
	        AND (facility_name LIKE '%' || #{keyword} || '%') or (facility_addr LIKE '%' || #{keyword} || '%') or (f_feature LIKE '%' || #{keyword} || '%') or (f_intro LIKE '%' || #{keyword} || '%')	
	    </if>		
	</sql>
 	<select id="listCount" parameterType="com.example.demo.util.SearchCriteria" resultType="int">
		SELECT COUNT(facility_no)
		 FROM facility
		 WHERE 1=1 
		 <include refid="search"></include>
		 and facility_no > 0
	</select>
	
	<select id="getFacility" parameterType="int" resultType="com.example.demo.vo.FacilityVo">
		select * from facility where facility_no = #{facility_no}
	</select>
		
	<select id="listRoom" parameterType="int" resultType="com.example.demo.vo.RoomVo">
		select * from room where facility_no = #{facility_no}
	</select>
	
	<select id="getRoom" parameterType="int" resultType="com.example.demo.vo.RoomVo">
		select * from room where rm_no = #{rm_no}
	</select>
	
	
	
	
	<select id="listReview" parameterType="int" resultType="com.example.demo.vo.ReviewVo">
		select * from review where facility_no = #{facility_no}
	</select>
	
	<select id="getReview" parameterType="int" resultType="com.example.demo.vo.ReviewVo">
		select * from review where r_no = #{r_no}
	</select>
	
	<insert id="postReview" parameterType="com.example.demo.vo.ReviewVo">
		insert into review(r_no,review_content,r_grade,r_insert_date,r_update_date,r_open_status,facility_no,user_id)
		values(seq_r_no.nextval,#{review_content},#{r_grade},sysdate,sysdate,0,#{facility_no},#{user_id})
	</insert>
	
	<delete id="deleteReview" parameterType="int">
		delete from review where r_no = #{r_no}
	</delete>
	
<!-- 시큐리티	<delete id="deleteReview" parameterType="int">
		delete from review where r_no = #{r_no} and user_id = #{user_id}
	</delete>
	 -->
	<update id="updateReview" parameterType="com.example.demo.vo.ReviewVo">
		update review set review_content=#{review_content},r_grade=#{r_grade},r_update_date=sysdate,user_id=#{user_id} where r_no = #{r_no}
	</update>
	
	
<!-- 시큐리티	<update id="updateReview" parameterType="com.example.demo.vo.ReviewVo">
		update review set review_content=#{review_content},r_grade=#{r_grade},r_update_date=sysdate where r_no = #{r_no} and user_id = #{user_id}
	</update> -->
		
	<insert id="reservePlace" parameterType="com.example.demo.vo.ReservationVo">
		insert into reservation(rsv_no,user_id,rsv_price,rsv_date,check_in,check_out,human_num,pet_num,rm_no,rsv_paid,guest_name,guest_tel)
		values(seq_rsv_no.nextval,#{user_id},#{rsv_price},sysdate,#{check_in},#{check_out},#{human_num},#{pet_num},#{rm_no},'결제대기',#{guest_name},#{guest_tel})		
	</insert>
 
<!-- 결제대기 예약 정보 조회 -->
<select id="select_reserve" resultType="com.example.demo.vo.ReservationVo">
	select * from reservation where user_id = #{user_id} and rsv_paid = '결제대기'
</select>

<!-- 아이디로 rm_no조회 -->
<select id="select_rm_no" resultType="java.lang.Integer">
		select rm_no from reservation where user_id=#{user_id}
</select>	

<!-- 아이디로 예약 내역 조회 -->
<select id="select_reservation_list" resultType="com.example.demo.vo.ReservationVo">
	select rsv_no, user_id, rsv_price, rsv_date, to_char(check_in,'yyyy-mm-dd') as check_in, to_char(check_out,'yyyy-mm-dd') as check_out, human_num, pet_num, rm_no,
rsv_paid, guest_name, guest_tel from reservation where user_id = #{user_id} order by rsv_no desc
</select>

<!-- 	rm_no로 방이름 조회 -->
<select id="select_room_name" resultType="com.example.demo.vo.RoomVo">
	select * from room where rm_no = #{rm_no}
</select>

<!-- rm_no로 호텔 번호 조회 -->
<select id="select_facility_no" resultType="java.lang.Integer">
	select facility_no from room where rm_no = #{rm_no}
</select>

<!-- 호텔 번호로 호텔 조회 -->
<select id="select_facility" resultType="com.example.demo.vo.FacilityVo">
	select * from facility where facility_no = #{facility_no}
</select>

<!-- 결제하면 rsv_paid를 결제완료로 수정 -->
<update id="pay_rsv_paid">
	update reservation set rsv_paid = '결제완료' where user_id = #{user_id} and rsv_no = #{rsv_no} and rsv_paid = '결제대기'
</update>

	
</mapper>